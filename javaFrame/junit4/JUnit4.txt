
1.常用的注释
    @Test   修饰为测试方法
        @Test(expected=.class)预捕获可能出现的异常
        @Test(timeout=毫秒)限制最大的运行时间
    @BeforeClass    在所有测试方法运行前被执行，static修饰
    @AfterClass     在所有测试方法运行后被执行，static修饰
    @Before     在每个测试方法运行前执行一次
    @After      在每个测试方法运行后执行一次
    @Ignore     该方法被忽略

2.测试方法的注意事项:
    使用@Test修饰
    使用public void修饰，不可带参数
    测试方法间应独立，不可相互依赖
    
3.测试失败的两种情况
    1).Failure一般由单元测试使用的断言方法判断失败所引起的，
        这经表示 测试点发现了问题，就是说程序输出的结果和我们预期的不一样。
        例如:测试2+3=5，我们给预期为6
    2).Error是由代码异常引起的，它可以产生于测试代码本身的错误，
        也可以是被测试代码中的一个隐藏的bug.例如:测试3/0，除数无法为0
    3).测试用例不是用来证明你是对的，而是用来证明你没有错。
    
4.测试类的运行流程
    beforeClass->before->测试方法1->after->before->测试方法2->after->......->afterClass
    @beforeClass,@afterClass,@before,@after这些方法可在创建测试类的时候勾选以创建
    1).@BeforeClass修饰的方法会在所有方法被调用前被执行，而且该方法是静态的，
        所以当测试类被加载后接着就会运行它，而且在内存中它只会存在一份实例，它比较适合加载配置文件。
    2).@AfterClass所修饰的方法通常用来对资源的清理，如关闭数据库的连接
    3).@Before和@After会在每个测试方法的前后各执行一次。
