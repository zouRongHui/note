###############
1. 层级任务明确，那一层做哪些事？
    controller：定义请求入口，并调用manager层，不包含业务代码
    manager：调用server层方法，获取数据并处理多种对象数据，无需考虑复用，精细到具体的请求
    server：
        整合dao层的请求参数；
        调用dao层方法获取数据并执行针对单种对象的数据操作，尽量做到可复用；
    dao：与数据的交互
    层级关系：
    controller 1:n manager
    manager 1:n server
    server 1:n dao
    dao 1:1 data table
2. 接口返回json格式时进行 封装。结构包括状态标志、状态值、数据
3. 编写注释
    1). interface和implement尽量都写上注释
    2). 新增的方法、类写上作者
4. 集合类，尽量初始化容量
5. 使用异常机制处理一些异常情况
	完善的一整套异常机制，永远不返回500，所有可知的和未知的异常都应该有处理方案，最好需要开发人员或者运维人员解决的异常做到可视化查看。-- 稠银小程序
6. 多用户情况下
    前后端都需要对数据的正确性做校验
    使用hibernate框架时可以在数据表上加一个字段用于版本控制，乐观锁
7. 耗时较长且无需实时的操作可设计成定时任务在空闲时间执行，或使用异步线程池
8. 页面ajax异步请求时注意浏览器针对同一域名有并发数的限制，chrome和Firefox限制为6
9. 数据库连接池配置时考虑数据库or数据平台的处理能力，还需要考虑数据服务器的硬件资源
10. 枚举、静态变量
11. 使用三目运算符，避免 xxx.xxx() == null ? "" : xxx.xxx(); 该语句会调用两次方法
12. HTTP请求，当某个参数的数量是动态时，后端会用一个String数组来接受。此时如果，参数只有一个时，后端服务器会对这个参数按照','进行数组拆分，导致参数传递出错
13. Integer类型数据做 == 时，需要预先做null判断，null == 1 这样的判断会抛NPE，可能是封装类的自动拆装箱原因
14. 前端ajax异步更新部分页面数据时，清除旧数据的代码要写在ajax的返回回调方法中。
15. 业务逻辑设计时，尽量填写备注，说明当初这样设计的理由，便于后续改错or扩展
16. 作为服务提供方，可为每次客户的请求生成一个请求id，并返回该id给客户端。这样设计，便于出问题后能和客户端快速对接上出错的请求。-- 稠银小程序
17. 
