
ajax：Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。

原生ajax 语法：
围绕 XMLHttpRequest 对象展开，
创建 XMLHttpRequest：
	//判断是否支持内建 XMLHttpRequest 对象，不支持时则创建 ActiveXObject 对象。
	if (window.XMLHttpRequest) {
		xmlhttp = new XMLHttpRequest();
	} else {
		xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
	}
发送请求：
	//method：请求的类型(GET/POST)，url：请求路径，async：true（异步）或 false（同步）
	XMLHttpRequest.open(method,url,async);
	//string：仅用于 POST 请求传递参数
	XMLHttpRequest.send(string);
处理返回值：
	XMLHttpRequest 有几个重要属性
		readyState：标识 XMLHttpRequest 的状态，
			0: 请求未初始化；
			1: 服务器连接已建立；
			2: 请求已接收；
			3: 请求处理中；
			4: 请求已完成，且响应已就绪；
		status：服务器状态值(例如200，404，500等)；
		onreadystatechange：每当 readyState 发生改变时就会触发该事件，一次完整的请求会触发4次，分别是： 0-1、1-2、2-3、3-4；
		responseText：服务器返回的文本数据；
		responseXML：服务器返回的XML格式的数据；
	实例：
	xmlhttp.onreadystatechange = function () {
		//判断 XMLHttpRequest 对象的状态和服务器状态，下例是成功请求时示例。
		if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
			//do something..
		}
	}
常用的方法：
	 open();用于设置请求的目标url请求方法, 以及其他参数信息。
	 send();用于向服务器发送请求, 如果声明为异步, 那么该方法将立即返回, 否则将等到接收到服务器响应为止。
	 setRequestHeader(header的属性,Value);用于为请求的Http头设置值。
	 getResponseHeader("headerLabel");获取返回设置的Http头信息。
	 abort();停止或者放弃当前的异步请求。
	 getAllResponseHeaders();以字符串的形式返回完整的字符串信息。

常用的属性：
	statusText：返回Http状态码的文本信息
	

