1.比较大小
	BigDecimal.compareTo(BigDecimal) 返回结果0(相等),1(大于),-1(小于)
	
2.BigDecimal转String
	//第一个变量是小数位数，第二个变量是取舍方法(四舍五入)
	BigDecimal.setScale(2, BigDecimal.ROUND_HALF_UP).toString();

3.String转BigDecimal
	BigDecimal = new BigDecimal(String);
	
4.divide方法结果为无限小数问题
	使用该方法：pubilc BigDecimal divide(BigDecimal divisor, int scale, int roundingMode)
	意思是说：我用一个BigDecimal对象除以divisor后的结果，并且要求这个结果保留有scale个小数位，roundingMode表示的就是保留模式是什么，是四舍五入啊还是其它的，你可以自己选！

5.BigDecimal.setScale()用于格式化小数点
	setScale(1);	//保留一位小数，默认采用四舍五入方式
	setScale(1, BigDecimal.ROUND_DOWN);	//直接删除多余的小数位，如2.35->2.3
	setScale(1, BigDecimal.ROUND_UP);	//进位处理，2.35->2.4
	setScale(1, BigDecimal.ROUND_HALF_UP);	//四舍五入，2.35->2.4
	setScale(1, BigDecimal.ROUND_HALF_DOWN);	//四舍五入，2.35->2.3，如果是5则向下舍